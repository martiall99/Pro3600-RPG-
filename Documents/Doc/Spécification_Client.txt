
//Debut

// Variables globales
// Transfert tran; bibliothèque bibl; Traduction trad; Client: cli int id client1; int id clinet2;

//Cont_action :
std::string titre;
std::string descr;

// Variable de :
//bibl :
Vector <int> tab_id;
Vector <std::string> tab_titre;
Vector <std::string> tab_descr;
int buffer_int;
std::string buffer_titre;
std::string buffer_descr;

//Transfert:
std::string IP_client;
std::string IP_serveur;
std::string port_client;
std::string port_serv;

//Trad
bool partie_debutee;

//client
int numero_coup;

//methode de:
//cont_action
void modif;

//bibl:
private:
	void: ajLigne();
	void: modifLigne();
	void: rechifLigne();
	void: interpreterLigne(std::string Ligne); // modifie les buffers et appelle les 3 precedantes

public:
	cont_action rechAction(int id);
	void mAJ(std::string MAJ);

//transfert:
private:
	void recoitMessage();
	void decoServeur();

public: // utilisé par traduction:
	void demandeCo(std::string IP);
	void demandeDeco();
	void envoieMess(std::string mess);


//Traduction:
Private:
	void iT0(std::string mess); //décode les messages de type 0
	void iT1(std::string mess); // ces fonctions sont appelées par decode
	void iT2(std::string mess); 
	void iT3(std::string mess); 
	void iT4(std::string mess);
	void iT5(std::string mess);
	void iT6(std::string mess);

Public: //utilisée par transfert;
	void decodeTypeMessage(std::string mess);//envoie vers iTx avec x entre 0 et 6 inclus
	//utilisées par client
	void sendOK(); void sendNOK(); //T1
	void demDebut(); void demFin(); //T1
	void envPers(std::string p); void envAct(std::string a); //T3
	void envShif(std::string s); // T5
	void coServ(std::string IP); void decoServ();//T0
	
//Client

public: //utilisé par interface
	void repClientServ();
	void choixPerso();
	void demDebut();
	void Ok();
	void choixShif();
	void ChoixAction();
	//utilisé par traduction
	void Oc(int id);
	void 2p(std::string persos);
	void 3p(int id, std::string pers);
	void 1dd();//demande debut partie reçue
	void 1ds(); // serveur dit que partie débute
	void 2p(std::string pers);
	void 3p(int id, std::string pers);
	void 1dd(); // demande début partie réçue
	void 1ds(); //serveur dit que partie débute
	void 5d();
	void 5c(int id std::string ski);
	void 5f(int id_gagn);
	void 6a(std::string maj);
	void 4a(std::string etats);
	void 2a(int num_coup, std::string actions_poss);
	void 3a(int id, std::string act)

//Fin